@startuml
class logic.card.MageCard {
~ Element mageType
+ <<Create>> MageCard(String,int,int,Element)
+ Element getMageType()
+ void setMageType(Element)
+ void play(Player)
+ boolean canPlay(Player)
}
class logic.card.OrbCard {
- Element orbType
+ <<Create>> OrbCard(String,int,int,Element)
+ void play(Player)
+ boolean canPlay(Player)
+ Element getOrbType()
+ void setOrbType(Element)
}
abstract class logic.card.BaseCard {
- String name
- int power
- int health
+ <<Create>> BaseCard(String,int,int)
+ String getName()
+ void setName(String)
+ int getPower()
+ void setPower(int)
+ int getHealth()
+ void setHealth(int)
+ {abstract}void play(Player)
+ {abstract}boolean canPlay(Player)
+ int attack(BaseCard)
}
enum logic.card.Element {
+  FIRE
+  WATER
+  EARTH
+  ICE
}
class logic.card.RobotCard {
- int energyCost
+ <<Create>> RobotCard(String,int,int,int)
+ int getEnergyCost()
+ void setEnergyCost(int)
+ boolean canPlay(Player)
+ void play(Player)
}


logic.card.BaseCard <|-- logic.card.MageCard
logic.card.BaseCard <|-- logic.card.OrbCard
logic.card.BaseCard <|-- logic.card.RobotCard
@enduml